println("lib location start")
if (isComponentMode.toBoolean()) {
    apply plugin: 'com.android.application'
    apply plugin: 'versionplugin'

    versionPlugin {
        buildTypeMatcher = 'debug'
//        '$appName/project/buildType-v_$versionName-c_$versionCode'
//        fileFormat = '$appName-v_$versionName-c_$versionCode'
        fileFormat = '$project-$appName-$buildType-v_$versionName-c_$versionCode'

    }
} else {
    apply plugin: 'com.android.library'
}


android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        component {
            initWith debug
            debuggable true
        }
    }
    sourceSets {
//        component {
//            java.srcDirs = ['src/component/java']
//        }
    }
}
dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    api project(path: ':client/common')

//    // Dependencies for local unit tests
//    testImplementation "junit:junit:${rootProject.ext.junitVersion}"
//    testImplementation "org.mockito:mockito-all:1.10.19"
//    testImplementation "org.mockito:mockito-core:${rootProject.ext.mockitoVersion}"
//    testImplementation "org.mockito:mockito-inline:${rootProject.ext.mockitoVersion}"
//    testImplementation "org.hamcrest:hamcrest-all:${rootProject.ext.hamcrestVersion}"
//
//    // Espresso dependencies
//    androidTestImplementation "com.android.support.test.espresso:espresso-core:${rootProject.ext.espressoVersion}"
//    androidTestImplementation "com.android.support.test.espresso:espresso-contrib:${rootProject.ext.espressoVersion}"
//    androidTestImplementation "com.android.support.test.espresso:espresso-intents:${rootProject.ext.espressoVersion}"
//    androidTestImplementation "com.android.support.test.espresso:espresso-accessibility:${rootProject.ext.espressoVersion}"
//    androidTestImplementation "com.android.support.test.espresso:espresso-web:${rootProject.ext.espressoVersion}"
//    androidTestImplementation "com.android.support.test.espresso.idling:idling-concurrent:${rootProject.ext.espressoVersion}"
//    // The following Espresso dependency can be either "implementation"
//    // or "androidTestImplementation", depending on whether you want the
//    // dependency to appear on your APK's compile classpath or the test APK
//    // classpath.
//    androidTestImplementation "com.android.support.test.espresso:espresso-idling-resource:${rootProject.ext.espressoVersion}"
//
//    // Dependencies for Android unit tests
//    androidTestImplementation "junit:junit:${rootProject.ext.junitVersion}"
//    androidTestImplementation "org.mockito:mockito-android:${rootProject.ext.mockitoVersion}"
////    androidTestImplementation 'com.google.dexmaker:dexmaker:1.2'
////    androidTestImplementation 'com.google.dexmaker:dexmaker-mockito:1.2'
//
//    // Android Testing Support Library's runner and rules
//    androidTestImplementation "com.android.support.test:runner:${rootProject.ext.runnerVersion}"
//    androidTestImplementation "com.android.support.test:rules:${rootProject.ext.rulesVersion}"
}
println("lib location end")