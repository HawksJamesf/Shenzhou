println("app start")
apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
//apply plugin: 'kotlin-kapt'

apply plugin: 'versionplugin'
//apply plugin: com.hawksjamesf.plugin.VersionPluginForJava
apply plugin: 'versionpluginforjava'
apply plugin: 'versionpluginforkotlin'


versionPlugin {
    buildTypeMatcher = 'debug'
//        '$appName/project/buildType-v_$versionName-c_$versionCode'
//        fileFormat = '$appName-v_$versionName-c_$versionCode'
    fileFormat = '$project-$appName-$buildType-v_$versionName-c_$versionCode-time_$releaseTime'
}

versionPluginForJava {
    buildTypeMatcher = "debug"
//        '$appName/project/buildType-v_$versionName-c_$versionCode'
//        fileFormat = '$appName-v_$versionName-c_$versionCode'
    fileFormat = "sadfasd"
}


versionPluginForKotlin {
    buildTypeMatcher = "debug"
//        '$appName/project/buildType-v_$versionName-c_$versionCode'
//        fileFormat = '$appName-v_$versionName-c_$versionCode'
    fileFormat = "sadfasd"
}

apply plugin: 'com.tencent.tinker.patch'
//apply from: 'tinker-support-bugly.gradle'
apply from: 'tinker-support-thinkerpatch.gradle'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName


        multiDexEnabled = true
        applicationId "com.hawksjamesf.simpleweather"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        ndk {
//             设置支持的SO库架构
            abiFilters 'x86_64'
            abiFilters 'x86'
            abiFilters 'armeabi-v7a'
            abiFilters 'arm64-v8a'
        }
//        buildConfigField("String", "WEATHER_URL_XIAO_MI", '"https://weatherapi.market.xiaomi.com"')
//        buildConfigField("String", "WEATHER_URL_CAI_YUN_APP", '"https://api.caiyunapp.com"')
        buildConfigField('String', 'WEATHER_URL_OPEN_WEATHER_MAP', '"https://api.openweathermap.org"')
        buildConfigField('String', 'WEATHER_APP_ID', '"fb306d52c9aaff4a1ae20fbe8aa38afb"')
        buildConfigField('String', 'BUGLY_APP_ID', '"a5f4e5063e"')
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
        }
    }
    lintOptions {
//        abortOnError false
    }

    productFlavors {

    }

//    useLibrary 'android.test.runner'
//    useLibrary 'android.test.base'
//    useLibrary 'android.test.mock'

}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation project(path: ':location')
    implementation project(path: ':mockserver')
    annotationProcessor "com.google.dagger:dagger-compiler:${rootProject.ext.daggerVersion}"
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'
    annotationProcessor "android.arch.persistence.room:compiler:1.0.0"

    // Dependencies for local unit tests
    testImplementation "junit:junit:${rootProject.ext.junitVersion}"
    testImplementation "org.mockito:mockito-all:1.10.19"
    testImplementation "org.mockito:mockito-core:${rootProject.ext.mockitoVersion}"
    testImplementation "org.mockito:mockito-inline:${rootProject.ext.mockitoVersion}"
    testImplementation "org.hamcrest:hamcrest-all:${rootProject.ext.hamcrestVersion}"

    // Espresso dependencies
    androidTestImplementation "com.android.support.test.espresso:espresso-core:${rootProject.ext.espressoVersion}"
    androidTestImplementation "com.android.support.test.espresso:espresso-contrib:${rootProject.ext.espressoVersion}"
    androidTestImplementation "com.android.support.test.espresso:espresso-intents:${rootProject.ext.espressoVersion}"
    androidTestImplementation "com.android.support.test.espresso:espresso-accessibility:${rootProject.ext.espressoVersion}"
    androidTestImplementation "com.android.support.test.espresso:espresso-web:${rootProject.ext.espressoVersion}"
    androidTestImplementation "com.android.support.test.espresso.idling:idling-concurrent:${rootProject.ext.espressoVersion}"
    // The following Espresso dependency can be either "implementation"
    // or "androidTestImplementation", depending on whether you want the
    // dependency to appear on your APK's compile classpath or the test APK
    // classpath.
    androidTestImplementation "com.android.support.test.espresso:espresso-idling-resource:${rootProject.ext.espressoVersion}"

    // Dependencies for Android unit tests
    androidTestImplementation "junit:junit:${rootProject.ext.junitVersion}"
    androidTestImplementation "org.mockito:mockito-android:${rootProject.ext.mockitoVersion}"
//    androidTestImplementation 'com.google.dexmaker:dexmaker:1.2'
//    androidTestImplementation 'com.google.dexmaker:dexmaker-mockito:1.2'

    // Android Testing Support Library's runner and rules
    androidTestImplementation "com.android.support.test:runner:${rootProject.ext.runnerVersion}"
    androidTestImplementation "com.android.support.test:rules:${rootProject.ext.rulesVersion}"

    //optional, help to generate the final application
    annotationProcessor "com.tencent.tinker:tinker-android-anno:${TINKER_VERSION}"
    compileOnly "com.tencent.tinker:tinker-android-anno:${TINKER_VERSION}"
    //tinker's main Android lib
//    api "com.tencent.tinker:tinker-android-lib:${TINKER_VERSION}"
    implementation "com.tinkerpatch.sdk:tinkerpatch-android-sdk:1.2.8"

}
println("app end")
repositories {
    mavenCentral()
}
